[
  // 终端相关
  // 当聚焦非编辑器终端，按下ctrl+w时，关闭当前终端
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  // todo: 不生效
  // 使用默认配置新建终端
  {
    "key": "ctrl+n",
    "command": "workbench.action.terminal.new",
    // "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  // 可选择个人配置新建终端
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.terminal.newWithProfile",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  // 上一个终端
  {
    "key": "ctrl+i",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  // 下一个终端
  {
    "key": "ctrl+k",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  // 关闭组中其他编辑器
  {
    "key": "ctrl+k w",
    "command": "workbench.action.closeOtherEditors"
  },
  // 视觉行移动
  {
    "key": "up",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "wrappedLine",
      "value": 1
    },
    "when": "editorTextFocus && !suggestWidgetVisible"
  },
  // 视觉行移动
  {
    "key": "down",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "wrappedLine",
      "value": 1
    },
    "when": "editorTextFocus && !suggestWidgetVisible"
  },
  // 向下复制
  {
    "key": "shift+alt+down",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // 向上复制
  {
    "key": "shift+alt+up",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // 向下插入光标
  {
    "key": "ctrl+shift+alt+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus && !editorReadonly"
  },
  // 向上插入光标
  {
    "key": "ctrl+shift+alt+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus && !editorReadonly"
  },
  // 焦点切换
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "ctrl+shift+i",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+k",
    "command": "workbench.action.terminal.focus"
  },
  // vim提供 - 文件夹等列表焦点切换
  {
    "key": "k",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "i",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  // vim提供 - 列表折叠
  {
    "key": "j",
    "command": "list.collapse",
    "when": "listFocus && !inputFocus"
  },
  // vim提供 - 列表选择(打开)
  {
    "key": "l",
    "command": "list.select",
    "when": "listFocus && !inputFocus"
  },
  // 新建文件
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  // 重命名文件
  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  // 复制文件
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && !inputFocus"
  },
  // 剪切文件
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && !inputFocus"
  },
  // 粘贴文件
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && !inputFocus"
  },
  // 删除文件
  {
    "key": "d",
    "command": "deleteFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  // 触发建议
  {
    "key": "alt+oem_comma", // Alt+,
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  // 快速修复
  {
    "key": "alt+oem_period",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  // 聚焦资源管理器
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  // toggle Boolean
  {
    "key": "alt+b",
    "command": "extension.toggleBool",
    "when": "editorTextFocus && !editorReadonly"
  },
  // zen 模式
  {
    "key": "ctrl+n",
    "command": "workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  // 打开当前指向的链接
  {
    "key": "alt+enter",
    "command": "editor.action.openLink"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.openLink",
    // 可能存在链接未标识
    "when": "editorFocus && !suggestWidgetVisible && !findWidgetVisible && !terminalFocus"
    // 光标在编辑器内、当前光标位置可提供链接、代码补全面板未打开、查找面板未打开、终端未获焦点
    // "when": "editorFocus && !suggestWidgetVisible && editorHasLinkProvider && !findWidgetVisible && !terminalFocus"
  },
  {
    "key": "ctrl+u",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  // toggle辅助侧栏
  {
    "key": "ctrl+o",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  // 相同项插入光标
  {
    "key": "ctrl+shift+d",
    "command": "selectAllSearchEditorMatches",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+shift+d",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus"
  },
  // 聚焦左侧编辑器组
  {
    "key": "ctrl+k shift+oem_comma", // ctrl+k <
    "command": "workbench.action.focusLeftGroup"
  },
  // toggle终端
  {
    "key": "alt+t",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  // 聚焦右侧编辑器组
  {
    "key": "ctrl+k shift+oem_period", // ctrl+k >
    "command": "workbench.action.focusRightGroup"
  },

  // --- 以下为清除原有快捷键 ---
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+u",
    "command": "-cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+alt+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFileFolder",
    "when": "isMacNative && openFolderWorkspaceSupport"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFile",
    "when": "true"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFolderViaWorkspace",
    "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+oem_3",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-selectAllSearchEditorMatches",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-addCursorsAtSearchResults",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+l",
    "command": "-workbench.action.chat.newChat",
    "when": "chatIsEnabled && inChat"
  },
  {
    "key": "ctrl+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "-notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  },
  {
    "key": "ctrl+i",
    "command": "-workbench.action.chat.startVoiceChat",
    "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest"
  },
  {
    "key": "ctrl+i",
    "command": "-workbench.action.chat.stopListeningAndSubmit",
    "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
  },
  {
    "key": "ctrl+i",
    "command": "-workbench.action.terminal.chat.focusInput",
    "when": "terminalChatFocus && !inlineChatFocused"
  },
  {
    "key": "ctrl+i",
    "command": "-inlineChat.start",
    "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
  },
  {
    "key": "ctrl+i",
    "command": "-workbench.action.terminal.chat.start",
    "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "ctrl+i",
    "command": "-codeium.openCodeiumCommand",
    "when": "codeium.commandEnabled && editorTextFocus && !inlineSuggestionsVisible"
  },
  {
    "key": "ctrl+i",
    "command": "-focusSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+u",
    "command": "-list.focusPageUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+oem_comma",
    "command": "-workbench.action.openSettings"
  },
  {
    "key": "alt+oem_comma",
    "command": "-gitlens.diffWithPrevious",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "alt+oem_comma",
    "command": "-gitlens.diffWithPreviousInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "alt+oem_comma",
    "command": "-gitlens.diffWithPreviousInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "alt+oem_comma",
    "command": "-gitlens.key.alt+,",
    "when": "gitlens:key:,"
  },
  {
    "key": "alt+oem_comma",
    "command": "-codeium.showPreviousCortexStep"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-workbench.panel.chatEditing",
    "when": "workbench.panel.chat.view.edits.active"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-workbench.action.chat.openEditSession",
    "when": "chatEditingParticipantRegistered && chatIsEnabled && view != 'workbench.panel.chat.view.edits'"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-codeium.openCodeiumCommand",
    "when": "codeium.commandEnabled && editorTextFocus && !inlineSuggestionsVisible"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+oem_period",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+oem_period",
    "command": "-codeium.showNextCortexStep"
  },
  {
    "key": "ctrl+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+k w",
    "command": "-workbench.action.closeEditorsInGroup"
  }
]
